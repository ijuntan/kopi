{"version":3,"sources":["Images/bubuk.png","Images/fw.png","Images/fb.png","Images/iw.png","Images/ib.png","Images/ww.png","Images/wb.png","Images/lw.png","Images/lb.png","Images/bg.jpg","Product.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Produk","name","img","bubuk","desc","price","weight","useStyles","makeStyles","buttonHeader","color","fontSize","margin","backgroundColor","width","left","background","bottom","content","display","height","position","transition","buttonLogo","scrollToRef","ref","window","scrollTo","current","offsetTop","App","props","homeRef","useRef","ProductRef","contactRef","marketPlaceRef","classes","CssBaseline","AppBar","Toolbar","style","toRef","map","item","Button","onClick","className","disableRipple","Grid","container","xs","justify","src","LogoWhite","alt","Iwhite","FBwhite","Wwhite","index","alignItems","bg","Product","list","Paper","md","LogoBrown","Ibrown","FBbrown","Wbrown","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.04e47208.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bubuk.298db563.png\";","module.exports = __webpack_public_path__ + \"static/media/fw.22a52e97.png\";","module.exports = __webpack_public_path__ + \"static/media/fb.c1c3252a.png\";","module.exports = __webpack_public_path__ + \"static/media/iw.d26e9ae8.png\";","module.exports = __webpack_public_path__ + \"static/media/ib.9a51adbe.png\";","module.exports = __webpack_public_path__ + \"static/media/ww.0fbb3768.png\";","module.exports = __webpack_public_path__ + \"static/media/wb.758e4ba4.png\";","module.exports = __webpack_public_path__ + \"static/media/lw.63acb3a8.png\";","module.exports = __webpack_public_path__ + \"static/media/lb.9decc95b.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.f3fb2b87.jpg\";","import bubuk from './Images/bubuk.png'\r\n\r\nconst Produk = [\r\n  { name:'Bubuk Arabica',\r\n    img:bubuk,\r\n    desc:'Bubuk kopi halus dari arabica, terbuat dari biji pilihan terbaik',\r\n    price:[\r\n      {weight:'250gr - Rp. 50.000,00'},\r\n      {weight:'500gr - Rp. 100.000,00'},\r\n      {weight:'1kg - Rp. 200.000,00'}\r\n    ]\r\n  },\r\n  { name:'Bubuk Arabica',\r\n    img:bubuk,\r\n    desc:'Bubuk kopi halus dari arabica, terbuat dari biji pilihan terbaik',\r\n    price:[\r\n      {weight:'250gr - Rp. 50.000,00'},\r\n      {weight:'500gr - Rp. 100.000,00'},\r\n      {weight:'1kg - Rp. 200.000,00'}\r\n    ]\r\n  },\r\n]\r\n\r\nexport default Produk","import React,{useRef} from 'react';\nimport {AppBar,Toolbar,CssBaseline,Grid,Button,Paper} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FBwhite from './Images/fw.png';\nimport FBbrown from './Images/fb.png';\nimport Iwhite from './Images/iw.png';\nimport Ibrown from './Images/ib.png';\nimport Wwhite from './Images/ww.png';\nimport Wbrown from './Images/wb.png';\nimport LogoWhite from './Images/lw.png';\nimport LogoBrown from './Images/lb.png';\nimport bg from './Images/bg.jpg';\nimport Product from './Product.js';\nimport './Styling.css';\n\nconst useStyles = makeStyles(() => ({\n  buttonHeader:{\n    color:'white',\n    fontSize: '2.2vh',\n    margin:'0 0.6vw',\n    \"&:hover\": {\n      backgroundColor: 'transparent',\n      \"&::after\": {\n        width: '100%',\n        left: '0',\n      },\n    },\n    \"&::after\":{\n      background: 'none repeat scroll 0 0 white',\n      bottom: '0',\n      content: \"''\",\n      display: 'block',\n      height: '2px',\n      left: '50%',\n      position: 'absolute',\n      transition: 'width 0.3s ease 0s, left 0.3s ease 0s',\n      width:'0'\n    }\n  },\n  \n  buttonLogo:{\n    \"&:hover\": {\n      backgroundColor: 'transparent',\n    }\n  }\n}))\n\nconst scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop)   \n// General scroll to element function\n\nconst App = (props) => {\n  const homeRef = useRef(null);\n  const ProductRef = useRef(null);\n  const contactRef = useRef(null);\n  const marketPlaceRef = useRef(null);\n  const toHome = () => scrollToRef(homeRef);\n  const toProduct = () => scrollToRef(ProductRef);\n  const toContact = () => scrollToRef(contactRef);\n  const toMarketPlace = () => scrollToRef(marketPlaceRef);\n  const classes = useStyles();\n  return (\n      <div>\n          <CssBaseline/>\n          <AppBar>\n              <Toolbar style={{backgroundColor:'#7a4a16'}}>\n                {\n                  [\n                    {name:'Product',toRef:toProduct},\n                    {name:'Marketplace',toRef:toMarketPlace},\n                    {name:'Contact',toRef:toContact},\n                  ].map((item)=>(\n                      <Button onClick={item.toRef} className={classes.buttonHeader} disableRipple>\n                        <div>\n                          {item.name}\n                        </div>\n                      </Button>\n                  ))\n                }\n                  <Grid container item xs={7} justify='center' style={{color:'black'}} ref={homeRef}>\n                    <Button onClick={toHome} disableRipple className={classes.buttonLogo}>\n                      <img src={LogoWhite} alt='logo' className='logoHeader'/>\n                    </Button>\n                  </Grid>\n\n                  <Grid container item xs={3} justify='flex-end'>\n                    {\n                      [\n                        {img:Iwhite},\n                        {img:FBwhite},\n                        {img:Wwhite},\n                      ].map((item,index)=>(\n                        <img src={item.img} alt={index} className='iconHeader'/>\n                      ))\n                    }\n                  </Grid>\n              </Toolbar>\n          </AppBar>\n\n          <div>\n            {/* Front Page */}\n            <Grid className='background' container justify='center' alignItems='center'>\n              <img src={bg} alt='randompic' className='frontPageImage'/>\n            </Grid>\n            \n            <div className='background' ref={ProductRef}>\n              {/* Product Title */}\n              <Grid \n                className='product' \n                container justify='center' alignItems='flex-end' \n              >\n                  Product\n              </Grid>\n              \n              {/* Product Content */}\n              <Grid container>\n                {\n                  Product.map((item)=>(\n                    <Grid className='isiProduct' item xs={12} container alignItems='center'>\n                      <img src={item.img} alt={item.name} className='imgSize'/>\n                      <div>\n                        <div className='namaProduct'>\n                          {item.name}\n                          <div className='descProduct'>\n                            {item.desc}\n                          </div>\n                        </div>\n                        {\n                          item.price.map((list)=>(\n                            <div className='hargaProduct'>\n                              {list.weight}\n                            </div>\n                          ))\n                        }\n                      </div>\n                    </Grid>\n                  ))\n                }\n              </Grid>\n            </div>\n            \n            {/* MarketPlace */}\n            <Grid className='marketPlace' ref={marketPlaceRef}>\n                <Grid item xs={12} className='marketPlaceHead' container justify='center'>\n                  Marketplace\n                </Grid>\n                <Paper className='marketPlacePaper'>\n\n                <Grid item md={3} xs={6} container justify='center'>\n\n                </Grid>\n                </Paper>\n            </Grid>\n\n            {/* Footer and Contact */}\n            <Grid container className='footer' ref={contactRef}>\n              <Grid item xs={6} container justify='center' alignItems='center' >\n                <img src={LogoBrown} alt='logoFooter' className='logoFooter'/>\n              </Grid>\n              <Grid item xs={6}  container justify='center' alignItems='center'>\n                <div className='footerText'>\n                  Hubungi kami\n\n                  <div>\n                    abadicoffee788@gmail.com\n                  </div>\n\n                  {\n                    [\n                      {img:Ibrown},\n                      {img:FBbrown},\n                      {img:Wbrown},\n                    ].map((item,index)=>(\n                      <img src={item.img} alt={index} className='iconFooter'/>\n                    ))\n                  }\n                </div>\n                \n              </Grid>\n            </Grid>\n          </div>\n      </div>\n  );\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}