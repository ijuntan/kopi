{"version":3,"sources":["Product.js","App.js","serviceWorker.js","index.js"],"names":["Produk","name","img","price","weight","scrollToRef","ref","window","scrollTo","current","offsetTop","App","props","produkRef","useRef","contactRef","marketPlaceRef","CssBaseline","AppBar","Toolbar","style","backgroundColor","toRef","map","item","Grid","container","xs","justify","Button","onClick","className","disableRipple","color","index","src","alt","alignItems","md","list","display","textAlign","padding","fontSize","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.61c42179.chunk.js","sourcesContent":[" const Produk = [\r\n    { name:'Bubuk Arabica',\r\n      img:'/images/bubuk.png',\r\n      price:[\r\n        {weight:'250gr - Rp. 50.000,00'},\r\n        {weight:'500gr - Rp. 100.000,00'},\r\n        {weight:'1kg - Rp. 200.000,00'}\r\n      ]\r\n    },\r\n    { name:'Bubuk Arabica',\r\n      img:'/images/bubuk.png',\r\n      price:[\r\n        {weight:'250gr - Rp. 50.000,00'},\r\n        {weight:'500gr - Rp. 100.000,00'},\r\n        {weight:'1kg - Rp. 200.000,00'}\r\n      ]\r\n    },\r\n    { name:'Bubuk Arabica',\r\n      img:'/images/bubuk.png',\r\n      price:[\r\n        {weight:'250gr - Rp. 50.000,00'},\r\n        {weight:'500gr - Rp. 100.000,00'},\r\n        {weight:'1kg - Rp. 200.000,00'}\r\n      ]\r\n    },\r\n    { name:'Bubuk Arabica',\r\n      img:'/images/bubuk.png',\r\n      price:[\r\n        {weight:'250gr - Rp. 50.000,00'},\r\n        {weight:'500gr - Rp. 100.000,00'},\r\n        {weight:'1kg - Rp. 200.000,00'}\r\n      ]\r\n    },\r\n    { name:'Bubuk Arabica',\r\n      img:'/images/bubuk.png',\r\n      price:[\r\n        {weight:'250gr - Rp. 50.000,00'},\r\n        {weight:'500gr - Rp. 100.000,00'},\r\n        {weight:'1kg - Rp. 200.000,00'}\r\n      ]\r\n    },\r\n    { name:'Bubuk Arabica',\r\n      img:'/images/bubuk.png',\r\n      price:[\r\n        {weight:'250gr - Rp. 50.000,00'},\r\n        {weight:'500gr - Rp. 100.000,00'},\r\n        {weight:'1kg - Rp. 200.000,00'}\r\n      ]\r\n    },\r\n  ]\r\n\r\nexport default Produk","import React,{useRef} from 'react';\nimport {AppBar,Toolbar,CssBaseline,Grid,Button} from '@material-ui/core';\nimport Produk from './Product.js';\nimport './Styling.css';\n\nconst scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop)   \n// General scroll to element function\n\nconst App = (props) => {\n    const produkRef = useRef(null)\n    const contactRef = useRef(null)\n    const marketPlaceRef = useRef(null)\n    const toProduk = () => scrollToRef(produkRef)\n    const toContact = () => scrollToRef(contactRef)\n    const toMarketPlace = () => scrollToRef(marketPlaceRef)\n    return (\n        <div>\n            <CssBaseline/>\n            <AppBar>\n                <Toolbar style={{backgroundColor:'white'}}>\n                  {\n                    [\n                      {name:'Produk',toRef:toProduk},\n                      {name:'Contact',toRef:toContact},\n                      {name:'Marketplace',toRef:toMarketPlace}\n                    ].map((item)=>(\n                      <Grid container item xs={1} justify='center'>\n                        <Button onClick={item.toRef} className='buttonHeader' disableRipple>\n                          <div>\n                            {item.name}\n                          </div>\n                        </Button>\n                      </Grid>\n                    ))\n                  }\n                    <Grid container item xs={7} justify='center' style={{color:'black'}}>\n                      Logo\n                    </Grid>\n                    <Grid container item xs={3} justify='flex-end'>\n                      {\n                        [\n                          {img:'/images/facebook.png'},\n                          {img:'/images/whatsapp.png'},\n                          {img:'/images/instagram.png'},\n                        ].map((item,index)=>(\n                          <img src={item.img} alt={index} className='iconSize'/>\n                        ))\n                      }\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n\n            <div>\n              <Grid className='background' container justify='center' alignItems='center'>\n              </Grid>\n              \n              <Grid \n                className='produk' \n                ref={produkRef} \n                container justify='center' alignItems='flex-end' \n              >\n                  Produk\n              </Grid>\n\n              <Grid container>\n                {\n                  Produk.map((item)=>(\n                    <Grid className='isiProduk' item md={4} xs={6} container justify='center' alignItems='center'>\n                      <img src={item.img} alt={item.name} className='imgSize'/>\n                      <div>\n                        <div className='namaProduk'>\n                          {item.name}\n                        </div>\n                        {\n                          item.price.map((list)=>(\n                            <div className='hargaProduk250'>\n                              {list.weight}\n                            </div>\n                          ))\n                        }\n                      </div>\n                    </Grid>\n                  ))\n                }\n              </Grid>\n\n              <Grid className='contact' ref={contactRef} container justify='center'>\n                <div>\n                  Stay in Touch!\n                </div>\n\n                <Grid>\n\n                </Grid>\n              </Grid>\n\n              <Grid className='marketPlace' ref={marketPlaceRef}>\n\n              </Grid>\n\n              <Grid container className='footer'>\n                <Grid item xs={5} container justify='center' alignItems='center' >\n                  Logo\n                </Grid>\n                <Grid item xs={4} style={{display:'inline-block',textAlign:'center'}} >\n                  <div style={{padding:'5vh 0 0'}}>\n                    Contact us!\n                  </div>\n                  <div style={{fontSize:'2vh'}}>\n                    Phone Number\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n        </div>\n    );\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}